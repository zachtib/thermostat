#!/usr/bin/env python

import ConfigParser
import datetime
import gdata
import gdata.calendar
import gdata.calendar.service

class ThermoEvent:
        def __init__(self, name, value, start, end):
                self.name = name
                self.value = value
                self.start = start
                self.end = end

def datetime_to_336(dt):
        r = 0
        r += 48 * dt.weekday()
        r += 2 * dt.hour
        if dt.minute >= 30:
                r += 1
        return r

if __name__ == '__main__':
        config = ConfigParser.ConfigParser()
        config.read('thermostat.conf')

        calendar = config.get('Calendar', 'calendar')

        calendar_service = gdata.calendar.service.CalendarService()

        now = datetime.datetime.now()
        week = datetime.timedelta(weeks=1)

        start_date = now.strftime('%Y-%m-%d')
        end_date = (now + week).strftime('%Y-%m-%d')

        query = gdata.calendar.service.CalendarEventQuery(calendar,
                                                        'public', 'full')

        query.start_min = start_date
        query.start_max = end_date

        feed = calendar_service.CalendarQuery(query)

        print feed.title.text, 'from %s to %s' % (start_date, end_date)

        events = []

        for event in feed.entry:
                title = event.title.text
                content = event.content.text
                for when in event.when:
                        start = datetime.datetime.strptime(when.start_time,
                                        '%Y-%m-%dT%H:%M:%S.000Z')
                        end = datetime.datetime.strptime(when.end_time,
                                        '%Y-%m-%dT%H:%M:%S.000Z')
                        events.append(ThermoEvent(title, content, start, end))
        
        event_bytes = ['00000000'] * 336

        for i, e in enumerate(sorted(events, key=lambda event: event.start)):
                print '%s: %s at %s from %s to %s' % \
                        (i, e.name, e.value, e.start, e.end)
                try:
                        value = int(e.value)
                        if e.name == 'Heat':
                                b = bin(128 + int(e.value))[2:]
                        elif e.name == 'Air':
                                b = bin(int(e.value))[2:]
                                b = '0' * (8 - len(b)) + b
                        elif e.name == 'Fan':
                                b = '11111111'
                        else:
                                b = '00000000'
                except TypeError:
                        b = '00000000'
                except ValueError:
                        b = '00000000'

                start = datetime_to_336(e.start)
                end = datetime_to_336(e.end)
                for t in xrange(start, end):
                        event_bytes[t] = b
        for i, b in enumerate(event_bytes):
                print '%s:\t%s' % (i, b)
